//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IQRecruitmentTool.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RecruitmentTestEntities : DbContext
    {
        public RecruitmentTestEntities()
            : base("name=RecruitmentTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CandidateLanguage> CandidateLanguage { get; set; }
        public virtual DbSet<CandidatePersonalInfProfile> CandidatePersonalInfProfile { get; set; }
        public virtual DbSet<CandidateQualification_> CandidateQualification_ { get; set; }
        public virtual DbSet<CandidateWorkExperience> CandidateWorkExperience { get; set; }
        public virtual DbSet<Gender> Gender { get; set; }
        public virtual DbSet<Jobs> Jobs { get; set; }
        public virtual DbSet<ListAdminUsers> ListAdminUsers { get; set; }
        public virtual DbSet<ListCompany> ListCompany { get; set; }
        public virtual DbSet<ListDisability> ListDisability { get; set; }
        public virtual DbSet<ListEmploymentBasis> ListEmploymentBasis { get; set; }
        public virtual DbSet<ListHighestQualification> ListHighestQualification { get; set; }
        public virtual DbSet<ListIndustry> ListIndustry { get; set; }
        public virtual DbSet<ListInstitution> ListInstitution { get; set; }
        public virtual DbSet<ListLanguage> ListLanguage { get; set; }
        public virtual DbSet<ListRace> ListRace { get; set; }
        public virtual DbSet<ListSkill> ListSkill { get; set; }
        public virtual DbSet<ListStudyField> ListStudyField { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<Town> Town { get; set; }
        public virtual DbSet<AssesQuestionType> AssesQuestionType { get; set; }
        public virtual DbSet<AssessAnswers> AssessAnswers { get; set; }
        public virtual DbSet<AssesSection> AssesSection { get; set; }
        public virtual DbSet<Assessments> Assessments { get; set; }
        public virtual DbSet<AssessMultipleQuestion> AssessMultipleQuestion { get; set; }
        public virtual DbSet<AssessQuestionStorage> AssessQuestionStorage { get; set; }
        public virtual DbSet<CandidateSkill> CandidateSkill { get; set; }
        public virtual DbSet<CompanyDescription> CompanyDescription { get; set; }
        public virtual DbSet<Competency> Competency { get; set; }
        public virtual DbSet<EmpowermentAnswer> EmpowermentAnswer { get; set; }
        public virtual DbSet<EmpowermentQuestion> EmpowermentQuestion { get; set; }
        public virtual DbSet<Experience> Experience { get; set; }
        public virtual DbSet<IdeaAttachment> IdeaAttachment { get; set; }
        public virtual DbSet<IdeaRequest> IdeaRequest { get; set; }
        public virtual DbSet<IdeaRequestType> IdeaRequestType { get; set; }
        public virtual DbSet<IdeaRoute> IdeaRoute { get; set; }
        public virtual DbSet<JobApplication> JobApplication { get; set; }
        public virtual DbSet<JobType> JobType { get; set; }
        public virtual DbSet<ListCountry> ListCountry { get; set; }
        public virtual DbSet<ListJobLevel> ListJobLevel { get; set; }
        public virtual DbSet<ListRegistrationStatus> ListRegistrationStatus { get; set; }
        public virtual DbSet<ListRemuneration> ListRemuneration { get; set; }
        public virtual DbSet<RateType> RateType { get; set; }
        public virtual DbSet<RemunerationType> RemunerationType { get; set; }
        public virtual DbSet<StorageCompany> StorageCompany { get; set; }
        public virtual DbSet<StorageCompanyDirectors> StorageCompanyDirectors { get; set; }
        public virtual DbSet<StorageDocumentLibrary> StorageDocumentLibrary { get; set; }
        public virtual DbSet<UserIdea> UserIdea { get; set; }
        public virtual DbSet<UserIdeaSearchHistory> UserIdeaSearchHistory { get; set; }
        public virtual DbSet<UserIdeaViewed> UserIdeaViewed { get; set; }
        public virtual DbSet<tblJobs_020520172000_backup> tblJobs_020520172000_backup { get; set; }
        public virtual DbSet<BEELevel> BEELevel { get; set; }
        public virtual DbSet<CandidateDocuments> CandidateDocuments { get; set; }
        public virtual DbSet<CompanyType> CompanyType { get; set; }
        public virtual DbSet<Decision> Decision { get; set; }
        public virtual DbSet<DocumentType> DocumentType { get; set; }
        public virtual DbSet<ListDocumentType> ListDocumentType { get; set; }
        public virtual DbSet<ListUserType> ListUserType { get; set; }
        public virtual DbSet<PrefIndustry> PrefIndustry { get; set; }
        public virtual DbSet<StorageJobs> StorageJobs { get; set; }
        public virtual DbSet<LanguageVW> LanguageVW { get; set; }
        public virtual DbSet<LocationView> LocationView { get; set; }
        public virtual DbSet<PersonalInfoVW> PersonalInfoVW { get; set; }
        public virtual DbSet<vwApplicantsPerJob> vwApplicantsPerJob { get; set; }
        public virtual DbSet<vwCompanyDetailed> vwCompanyDetailed { get; set; }
        public virtual DbSet<vwDocumentLibrary> vwDocumentLibrary { get; set; }
        public virtual DbSet<vwEmpowermentQuestion> vwEmpowermentQuestion { get; set; }
        public virtual DbSet<vwJobApplicantsCount> vwJobApplicantsCount { get; set; }
        public virtual DbSet<vwJobs> vwJobs { get; set; }
        public virtual DbSet<vwJobsPerApplicant> vwJobsPerApplicant { get; set; }
        public virtual DbSet<VWJobType> VWJobType { get; set; }
        public virtual DbSet<vwLanguageCompetency> vwLanguageCompetency { get; set; }
        public virtual DbSet<vwListedJobs> vwListedJobs { get; set; }
        public virtual DbSet<vwQualificationView> vwQualificationView { get; set; }
        public virtual DbSet<vwSkills> vwSkills { get; set; }
        public virtual DbSet<vwStorageDocumentLibrary> vwStorageDocumentLibrary { get; set; }
        public virtual DbSet<WorkingExperienceVW> WorkingExperienceVW { get; set; }
    
        public virtual int spGetUserInfo(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetUserInfo", userIDParameter);
        }
    
        public virtual int spGetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetUsers");
        }
    
        public virtual int spTest(Nullable<int> jobID, string jobCode)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            var jobCodeParameter = jobCode != null ?
                new ObjectParameter("JobCode", jobCode) :
                new ObjectParameter("JobCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTest", jobIDParameter, jobCodeParameter);
        }
    }
}
